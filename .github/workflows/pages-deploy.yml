# Workflow to run examples, build Jekyll site, and deploy
name: pages-run-build-deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # C++ job
  cpp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install C++ compiler
        run: sudo apt-get update && sudo apt-get install -y g++

      - name: Find and compile C++ projects
        run: bash .github/scripts/run_all_cpp.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cpp-artifacts
          retention-days: 1
          path: cpp/

  # MATLAB job
  matlab:
    uses: ./.github/workflows/matlab-build.yml

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: [cpp, matlab]
    env:
      CPP_DIR: docs/_includes/cpp
      FIGS_DIR: docs/assets/images/figures
      PUBS_DIR: docs/assets/published
      MATLAB_DIR: docs/_includes/matlab
      ZIP_FILE: docs/assets/code_examples.zip
      TMP_MATLAB: tmp_matlab
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create source zip file
        run: |
          mkdir -p "$(dirname ${{ env.ZIP_FILE }})"
          zip -r ${{ env.ZIP_FILE }} cpp matlab

      - name: Create artifacts directories
        run: |
          mkdir -p ${{ env.CPP_DIR }}
          mkdir -p ${{ env.MATLAB_DIR }}
          mkdir -p ${{ env.FIGS_DIR }}
          mkdir -p ${{ env.PUBS_DIR }}

      - name: Download C++ Artifacts
        uses: actions/download-artifact@v4
        with:
          name: cpp-artifacts
          path: ${{ env.CPP_DIR }}
      
      - name: Download MATLAB Artifacts
        uses: actions/download-artifact@v4
        with:
          name: matlab-artifacts
          path: .

      - name: Unzip MATLAB artifacts
        run: |
          mkdir -p ${{ env.TMP_MATLAB }}
          unzip matlab-artifacts.zip -d ${{ env.TMP_MATLAB }}
          mv ${{ env.TMP_MATLAB }}/figures/* ${{ env.FIGS_DIR }}
          mv ${{ env.TMP_MATLAB }}/matlab/html/* ${{ env.PUBS_DIR }}
          mv ${{ env.TMP_MATLAB }}/matlab/* ${{ env.MATLAB_DIR }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Display structure of downloaded files (4)
        run: ls -R
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
